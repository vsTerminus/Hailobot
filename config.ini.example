# These options configure Hailo, the AI portion of the bot
[hailo]

# brain_file should point to your Hailo brain file - usually a sqlite file.
brain_file = /path/to/brain.sqlite

# Order
# The higher you set this value, the more "sense" Hailo will make, but also the more likely it is to just repeat things verbatim.
# Suggested values are 2 (for nonsense) and 4 (for reasonable sentences).
order = 4

# The next section is for reddit variables.
# Here you can define when the bot should look at reddit, how often, and what subreddits.
[reddit]

# Do we want the bot to read reddit to learn from titles and comments?
# 1 = yes, 0 = no
use_reddit = 1

# Initially this did not require you to have a reddit account, but in the interest of being able to use the account's own subscriptions rather than a text file, this is now necessary.
# For Authentication you'll need to log in to reddit with the bot's account, go to Preferences -> Apps and create a new app. Select "Script" as the type.
# Then enter your Application ID, Secret, Username, and Password below.
# The code is open source, so you can see for yourself that I am not storing that password or using it for anything other than authentication.
# However, I still strongly recommend that you select a *unique* password for this account; One that you do not use anywhere else, because it will be stored in plaintext in this config file on your computer.
client_id = xxx
secret = xxx
username = banana_for_scale
password = hunter2

# Should the bot read /new in each subreddit?
# 1 = yes, 0 = no
read_new = 1

# Should the bot read the default view (/hot) in each subreddit?
# 1 = yes, 0 = no
read_hot = 1

# Interval
# The number of minutes between reading reddit
# If you have the bot reading any large subreddits with hundreds of comments on every thread, keep this low.
# Otherwise you'll end up with a very large brain file very quickly, which will cause performance issues sooner or later.
# On the other hand, if you're reading a bunch of smaller, less active subreddits feel free to have the bot check fairly frequently.
# Default is 720 minutes (12 hours), or twice a day.
interval = 720

# Read On Start
# Enable this is you want the bot to read reddit immediately after the process is started.
# Otherwise it will not read reddit until the time in the interval field has elapsed.
# 1 = yes, 0 = no
read_on_start = 0

# The next section covers options for the Discord bot.
[discord]

# First of all, do you want the bot to connect to Discord?
# 1 = yes, 0 = no
use_discord = 1

# Next, you'll need to register for a Bot Account over at [discordapp.com/developers](https://discordapp.com/developers/docs/intro).
# Set up an application, name it whatever you like. The Redirect/Callback URL isn't important since we're not doing OAuth, so just set it to whatever.
# Once you have converted the app to a Bot Account, you should be able to see the Bot ID and Token on your Applications page.
# Enter that Token here.
token = xxxxx

# Set this to the name of your bot.
name = DickButt9000

# Set this to the same thing you entered for the Redirect/Callback URL in your Discord app.
redirect_url = http://github.com/vsTerminus

# Do you want this bot to automatically try to reconnect if the connection is closed for any reason? You probably do.
# If you don't enable this you'll have to define an on_finish callback and handle that event yourself with $discord->gw_resume.
# 1 = yes, 0 = no
auto_reconnect = 1

# Enable this if you want a bunch of info displayed on your screen about messages being passed between client and server.
# Mostly useful for debugging, or if you're just curious.
# 1 = yes, 0 = no
verbose = 1

# Do you want Xyzzy to learn from the chat messages in Discord?
# Set this to false if you talk about private or sensitive things that you don't want the bot to repeat.
# 1 = yes, 0 = no
learn = 0

# Tweet Channels
# Paste the channel IDs here that you want the bot to also type its tweets into.
# Separate multiple channels with commas.
tweet_channels = 123456789000000,098765432111111

# Next we'll deal with IRC
[irc]

# Like Discord, do we even want to connect to IRC?
# 1 = yes, 0 = no
use_irc = 0

# Server

# Channels to Join
# Separated by Spaces

# It's up to you whether Xyzzy learns from the IRC Chat or not.
# Set this to false if you talk about private or sensitive info in the channel and don't want the bot to accidentally tweet something you said.
# 1 = yes, 0 = no
learn = 0

# The last section deals with Twitter
[twitter]

# Do we want to even use Twitter?
# 1 = yes, 0 = no
use_twitter = 1

# What is your Twitter Bot's account name?
name = Xyzzy

# We need four kinds of identification for Twitter. 
# First you'll need to head over to http://apps.twitter.com, log in to your bot's account, and register a new application.
# This will provide a Consumer Key and Consumer Secret. 
# The consumer key and secret allow you to identify yourself to the Twitter API servers. Enter them below.
consumer_key = xxx
consumer_secret = xxx

# Next you'll need to generate an Access Token and Access Token Secret.
# I believe this can be done from the same page you got your consumer key and secret from.
# If not, you'll have to go through the OAuth process.
# The Access Token and Secret allow you to make API calls on your account's behalf. Enter them below.
access_token = xxx
access_seret = xxx

# How often ( in seconds ) do you want to check for new tweets?
# Default is 120 seconds, or every two minutes.
# Set to 0 to disable.
poll_interval = 60

# How often ( in seconds ) do you want to send out random tweets?
# Default is 3600 seconds, or 1 hour.
# Set to 0 to disable.
tweet_interval = 3600

# To see more info about what the twitter code is doing, enable this.
# 1 = on, 0 = off
verbose = 0

# This section is for Last.FM Now Playing info
[lastfm]
# You will need a Last.FM Developer API account for this script to work.
# There is no way around it, since the request requires an API key and I will not share my own.
# Fortunately, this is easy to get! Simply head over to http://www.last.fm/api/account/create
# Once your account is created, the site will display your API Key and API Secret.
# WRITE THESE DOWN! Last.FM apparently has no way to look them up later, so don't lose them.
# This script only requires the api key.
api_key = xxx

